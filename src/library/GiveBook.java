/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
import java.awt.event.MouseListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Calendar;

/**
 *
 * @author İ.Gürkan Gürlek
 */
public class GiveBook extends javax.swing.JFrame {

    /**
     * Creates new form GiveBook
     * 
     */

    Connection conn=null;
    Connect connecttodb=new Connect();
    Statement st=null,st1=null;
    public static String status =null;
    
    public GiveBook() {
        initComponents();
        this.setLocationRelativeTo(null);
         conn=connecttodb.connectdb();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        TcGive = new javax.swing.JTextField();
        BookIdGive = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Button-Download-icon.png"))); // NOI18N

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Back-icon.png"))); // NOI18N
        jButton2.setText("Return ");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Member Tc");

        BookIdGive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookIdGiveActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Book ID");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add-icon (1).png"))); // NOI18N
        jButton1.setText("    Give Book");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TcGive, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                            .addComponent(BookIdGive)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel1)))
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(133, 133, 133))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(TcGive, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BookIdGive, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BookIdGiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookIdGiveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BookIdGiveActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
                MainPage show = new MainPage();
             show.setVisible(true);
              this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
      
        int ret = 0;
        if (TcGive.getText().equals("") || BookIdGive.getText().equals("") ){
           
            JOptionPane.showMessageDialog(null, "Please Fill The Boxes" ,"Warning",JOptionPane.WARNING_MESSAGE);
            ret=0;
       } 
       
        else if(CheckPerson(TcGive.getText())==0 || CheckBook(BookIdGive.getText())==0)
            {
                JOptionPane.showMessageDialog(null, "Member or Book Not Found ","Warning",JOptionPane.WARNING_MESSAGE);
                ret=0;
            } 
       
        else if (checkStock(BookIdGive.getText())==0){
           JOptionPane.showMessageDialog(null, "No Stock Left ","Warning",JOptionPane.WARNING_MESSAGE);
           ret=0;
       }
       
       else{ 
            
         /* if(checkTitle(TcGive.getText())==0){
              
              Calendar LastDate = Calendar.getInstance();
              String Time = null;
           try
           {
            PreparedStatement statement =  conn.prepareStatement("select Max_Extend_Date_I from settings");
            ResultSet result = statement.executeQuery();
            result.next();
            Time = result.getString(1);
            
            
           }
            catch (Exception e) {
            e.printStackTrace();
            
            }   
       
            int maxT;
            maxT = Integer.parseInt(Time);
            
          }
           if(checkTitle(TcGive.getText())==1){
               
                Calendar LastDate = Calendar.getInstance();
           String Time = null;
           try
           {
            PreparedStatement statement =  conn.prepareStatement("select Max_Extend_Date_S from settings");
            ResultSet result = statement.executeQuery();
            result.next();
            Time = result.getString(1);
            
            
           }
            catch (Exception e) {
            e.printStackTrace();
            
            }   
       
            int maxT;
            maxT = Integer.parseInt(Time);
           }*/
           
            java.sql.Date GivenDate;
            SimpleDateFormat bicim2=new SimpleDateFormat("dd-M-yyyy");
            Date date=new Date();
            System.out.println(bicim2.format(date));
            GivenDate = new java.sql.Date(date.getTime());
            
           String max = null;
         try
           {
            PreparedStatement statement =  conn.prepareStatement("select Max(OpID) from operations");
            ResultSet result = statement.executeQuery();
            result.next();
            max = result.getString(1);
           }
       catch (Exception e) {
            e.printStackTrace();
        }   
        
       System.out.print(max);
       int max2;
        
        if(max!=null){
            max2 = Integer.parseInt(max);
            max2++;
        }
        else{
           
            max2=1;
        }
            String MAX = Integer.toString(max2);
           
            try {
                    st=conn.createStatement();
                    String query="insert into operations (OpID,TCID,BookID,GivenDate,LastDate,takenDate,extentions) values (?,?,?,?,? ,?,?)";
                    PreparedStatement preparedStmt = conn.prepareStatement(query);
                    preparedStmt.setString(1, MAX );                    
                    preparedStmt.setString(2, TcGive.getText());
                    preparedStmt.setString(3, BookIdGive.getText());
                    preparedStmt.setDate(4, GivenDate);
                    preparedStmt.setDate(5, GivenDate);
                    preparedStmt.setDate(6, GivenDate);
                    preparedStmt.setString(7, "0");
                    ret=1;
        
                    preparedStmt.execute();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            
            String stock = null;
           try
           {
            PreparedStatement statement =  conn.prepareStatement("select stock from books");
            ResultSet result = statement.executeQuery();
            result.next();
            stock = result.getString(1);
           }
            catch (Exception e) {
            e.printStackTrace();
            
            }   
           if(ret==1){
               int stock2;
            stock2 = Integer.parseInt(stock);
            stock2--;
            String St2 = Integer.toString(stock2);
            
           try {
                    st=conn.createStatement();
                    String query="UPDATE books SET stock='"+St2+"' WHERE book_ID="+BookIdGive.getText();
                    st.executeUpdate(query);
                } catch (Exception e) {
                    e.printStackTrace();
                }
           
           }
        
           String Nobook = null;
           try
           {
            PreparedStatement statement =  conn.prepareStatement("select NofBooks from person");
            ResultSet result = statement.executeQuery();
            result.next();
            stock = result.getString(1);
           }
            catch (Exception e) {
            e.printStackTrace();
            
            }   
           if(ret==1){
               int NoBook2;
            NoBook2 = Integer.parseInt(stock);
            NoBook2++;
            String St2 = Integer.toString(NoBook2);
            
           try {
                    st=conn.createStatement();
                    String query="UPDATE person SET NofBooks='"+St2+"' WHERE TCno="+TcGive.getText();
                    st.executeUpdate(query);
                } catch (Exception e) {
                    e.printStackTrace();
                }
          JOptionPane.showMessageDialog(null, "Done ","",JOptionPane.WARNING_MESSAGE);
           }
           
           
           
           
       }     
    }//GEN-LAST:event_jButton1MouseClicked

    public int CheckPerson (String C){
        
        try {
          st=conn.createStatement();
          String query="select Tcno from person";
          ResultSet rs=st.executeQuery(query);
          while(rs.next())
          {
              if(rs.getString(1).equals(C))
              {
                   return 1;
              }
          }   
        } catch (Exception e) {
            e.printStackTrace();
        }
return 0;
        
        
        
    }
            
    public int CheckBook (String C){
        
        try {
          st=conn.createStatement();
          String query="select book_ID from books";
          ResultSet rs=st.executeQuery(query);
          while(rs.next())
          {
              if(rs.getString(1).equals(C))
              {

                return 1;
              }
          }   
        } catch (Exception e) {
            e.printStackTrace();
        }
return 0;
        
        
        
    }

    public int checkStock(String c){
        String stock = null;
           try
           {
            PreparedStatement statement =  conn.prepareStatement("select stock from books");
            ResultSet result = statement.executeQuery();
            result.next();
            stock = result.getString(1);
           }
            catch (Exception e) {
            e.printStackTrace();
            
            }   
       
            int max2;
            max2 = Integer.parseInt(stock);
            System.out.print(max2);
            if(max2==0){
                return 0;
            }
            return 1;
        
    }
    
   public int checkTitle(String T){
       
        try {
          st=conn.createStatement();
          String query="select title from person where TcNo="+T;
          ResultSet rs=st.executeQuery(query);
          while(rs.next())
          {
              if(rs.getString(1).equals("student"))
              {
                   return 1;
              }
          }   
        } catch (Exception e) {
            e.printStackTrace();
        }
return 0;
       
   }
    
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiveBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GiveBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BookIdGive;
    private javax.swing.JTextField TcGive;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    // End of variables declaration//GEN-END:variables

    private Object tkv() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
